{"version":3,"sources":["pages/NotFound/index.jsx","components/SideBar/index.jsx","components/BarChart/index.jsx","components/Linechart/index.jsx","components/Radarchart/index.jsx","components/Radialchart/index.jsx","components/Keydata/index.jsx","api/mocks/data/data.js","pages/Profil/index.jsx","api/mocks/services/index.jsx","route/route-user.jsx","components/Header/NavBar/index.jsx","components/Header/index.jsx","pages/App/index.jsx","index.js"],"names":["NotFound","className","to","Sidebar","src","process","alt","BarChart","propsData","useEffect","diffKilogram","parentWidth","document","getElementById","clientWidth","parentHeight","clientHeight","data","sessions","arrayOfKilogram","forEach","d","day","slice","push","kilogram","console","log","Math","max","min","minHeight","maxHeight","margin","width","height","x","d3","domain","map","range","padding","y","nice","y1","calories","barchartContainer","selectAll","remove","barchartSvg","append","attr","text","style","barchart","tooltip","barGroups","enter","on","event","this","transition","duration","html","call","g","tickFormat","ticks","tickSize","select","id","LineChart","propsDataAverage","dataAverage","draw","dayLetter","linear","xScale","length","yScale","sessionLength","line","curve","linechartContainer","linechartSvg","mainGradient","gradient","classed","lineChart","axisLine","focus","focusText","onclick","e","bisectDay","left","mousePosition","currentX","invert","xCurve","currentData","filter","yCurve","rec","i","RadarChart","dataPerformance","propsDataPerformance","top","right","bottom","nbSides","Object","keys","kind","polyParam","nbLevel","offset","PI","size","polyangle","r_0","center","radarChartContainer","scale","value","generatePoint","angle","sin","cos","drawPath","points","parent","lineGenerator","generateAndDrawLevels","levelsCount","sideCount","level","hyp","vertex","theta","group","drawCircles","drawData","dataset","n","len","drawText","point","drawLabels","groupL","label","name","dataD","v","entries","k","toString","generateData","RadialChart","dataRadial","propsDataRadial","radialParam","arcMinRadius","arcPadding","arcMaxRadius","score","radialChartContainer","svg","numArcs","arcWidth","arc","innerRadius","getInnerRadius","outerRadius","getOuterRadius","startAngle","endAngle","cornerRadius","arcTween","interpolate","t","index","delay","attrTween","KeyData","propsDataKey","backgroundColor","background","img","USER_MAIN_DATA","userInfos","firstName","lastName","age","keyData","calorieCount","proteinCount","carbohydrateCount","lipidCount","USER_ACTIVITY","userId","USER_AVERAGE_SESSIONS","USER_PERFORMANCE","Dashboard","useState","userInformation","setUserInformation","userActivity","setUserActivity","userPerformance","setUserPerformance","isError","setIsError","isDataLoading","setDataLoading","useParams","userAverage","setUserAverage","userKeys","setUserKeys","user","Number","shift","getInfosUserMocked","getUserActivityMocked","getUserAverageMocked","getUserPerformanceMocked","toBuildDataKey","parseFloat","toFixed","router","path","component","Profil","Navbar","Header","App","exact","from","Routage","route","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d4ac10d7.chunk.js","sourcesContent":["\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction NotFound() {\r\n\r\n    return (\r\n        <div className=\"container-notFound\">\r\n            <section className=\"content-notFound\">\r\n                <h1 className=\"notFound-title\">404</h1>\r\n                <p className=\"notFound-text\">Oups! La page que vous demandez n'existe pas</p>\r\n                <div className=\"notFound-link\">\r\n                    <Link className=\"notFound-link__a\" to=\"/\">Retourner sur la page d'acceuil </Link>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NotFound","const Sidebar = () => {\r\n\r\n    return (\r\n        <div className=\"content-sidebar\">\r\n            <ul className=\"content-sidebar__icon\">\r\n                <li><img className=\"sidebar-icon__logo\" src={process.env.PUBLIC_URL + \"/iconYoga.png\"} alt=\"logo\" /></li>\r\n                <li><img className=\"sidebar-icon__logo\" src={process.env.PUBLIC_URL + \"/iconSwPool.png\"} alt=\"logo\" /></li>\r\n                <li><img className=\"sidebar-icon__logo\" src={process.env.PUBLIC_URL + \"/iconBiker.png\"} alt=\"logo\" /></li>\r\n                <li><img className=\"sidebar-icon__logo\" src={process.env.PUBLIC_URL + \"/iconAlter.png\"} alt=\"logo\" /></li>\r\n            </ul>\r\n            <p className=\"content-sidebar__text\">copyrigth,SportSee.2020</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar;","import { useEffect } from \"react\"\r\nimport * as d3 from \"d3\";\r\n\r\nconst BarChart = ({ propsData }) => {\r\n\r\n        useEffect(() => {\r\n                const parentWidth = document.getElementById(\"barchart\").clientWidth;\r\n                const parentHeight = document.getElementById(\"barchart\").clientHeight;\r\n                const data = propsData.data.sessions;\r\n                //change format of date\r\n                var diffKilogram;\r\n                \r\n                var arrayOfKilogram=[];\r\n\r\n                data.forEach((d) => {\r\n                        d.day = d.day.slice(9, 10)\r\n                        arrayOfKilogram.push(d.kilogram)\r\n                })\r\n                console.log(arrayOfKilogram)\r\n                diffKilogram= (Math.max(...arrayOfKilogram)-Math.min(...arrayOfKilogram ))\r\n                var minHeight = Math.max(...arrayOfKilogram);\r\n                var maxHeight = Math.min(...arrayOfKilogram)\r\n                console.log(minHeight, maxHeight, diffKilogram)\r\n                \r\n\r\n                //set the dimensions and margin of the graph\r\n                const margin = { top: 70, right: 60, bottom: 30, left: 60 };\r\n                const width = parentWidth - margin.left - margin.right;\r\n                const height = parentHeight - margin.top - margin.bottom;\r\n\r\n                // set the ranges of x (abscisse)\r\n                const x = d3.scaleBand()\r\n                        .domain(data.map(d => d.day))\r\n                        .range([0, width]) // largeur du graph sur x\r\n                        .padding(0.9);// (0.9)\r\n\r\n                // set the ranges of y for kilogram\r\n                const y = d3.scaleLinear()\r\n                        .domain([d3.min(data, d => d.kilogram) -1 , d3.max(data, d => d.kilogram)]) // range des valeurs sur y\r\n                        .nice()\r\n                        .range([height, 0])// hauteur du gaph sur y\r\n\r\n                //set range of y1 for calories\r\n                const y1 = d3.scaleLinear()\r\n                        .domain([d3.min(data, d => d.calories) - 100, d3.max(data, d => d.calories) + 100])// range des valeurs sur y\r\n                        .nice()\r\n                        .range([height, 0]); // hauteur du gaph sur y1\r\n\r\n                //scale or legend of x Axis\r\n                const xAxis = g => g\r\n                        .attr(\"class\", \"barchart-xAxis\")\r\n                        .attr(\"transform\", `translate(0,${height + 5 })`) //deplacement vers le bas de l'abscisse\r\n                        .call(d3.axisBottom(x).tickSize(0))//remove little tick foward legend tickSizeInner or ticksSizeOuter\r\n                        .call(g => g.select(\".domain\").remove()) // remove the horizontal line forward legend\r\n\r\n                // scale or legend of y axis\r\n                const yAxis = g => g\r\n                        .attr(\"class\", \"barchart-yAxis\")\r\n                        .attr(\"transform\", `translate(${width },0)`)\r\n                        .style(\"font-size\", \"12px\")\r\n                        .call(d3.axisRight(y).tickFormat(d3.format(\".2\")).ticks(diffKilogram+1).tickSize(-width)) // put the legend at right to bar y .tickSizeOuter(-500).tickSizeInner(0)\r\n                        .call(g => g.select(\".domain\").remove()) // remove the vertical line forward legend\r\n\r\n                //cleaning svg on the node DOM with parent's id #barchart\r\n                var barchartContainer = d3.select(\"#barchart\");\r\n                barchartContainer.selectAll(\"*\").remove();\r\n\r\n                //create svg on the node DOM with parent's id #barchart\r\n                const barchartSvg = barchartContainer.append(\"svg\")\r\n                        .attr(\"width\", width + margin.left + margin.right)\r\n                        .attr(\"height\", height + margin.top + margin.bottom);\r\n                       \r\n\r\n                //create legend\r\n                barchartSvg.append(\"text\").attr(\"x\", margin.left).attr(\"y\", margin.top / 4).text(\"Activité quotidienne\").style(\"font-size\", \"1.5rem\").attr(\"alignment-baseline\", \"central\");\r\n                barchartSvg.append(\"circle\").attr(\"cx\", width - 80).attr(\"cy\", margin.top / 4).attr(\"r\", 6).style(\"fill\", \"#E60000\");\r\n                barchartSvg.append(\"circle\").attr(\"cx\", width - 180).attr(\"cy\", margin.top / 4).attr(\"r\", 6).style(\"fill\", \"#E282D30\");\r\n                barchartSvg.append(\"text\").attr(\"x\", width - 70).attr(\"y\", margin.top / 4).text(\"Calories brûlées (kCal)\").style(\"font-size\", \"1.5rem\").attr(\"alignment-baseline\", \"central\").attr(\"class\", \"bar-chart__text-legend\").style(\"text-anchor\", \"start\");\r\n                barchartSvg.append(\"text\").attr(\"x\", width - 170).attr(\"y\", margin.top / 4).text(\"Poids (kg)\").style(\"font-size\", \"1.5rem\").attr(\"alignment-baseline\", \"central\").attr(\"class\", \"bar-chart__text-legend\").style(\"text-anchor\", \"start\");\r\n\r\n                const barchart = barchartSvg.append(\"g\")\r\n                        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n                // div for tooltip\r\n                const tooltip = d3.select(\"#barchart\").append(\"div\")\r\n                        .attr(\"class\", \"tooltip\")\r\n                        .style(\"opacity\", 0);\r\n\r\n                //init the container of the bars\r\n                var barGroups = barchart.selectAll(null)\r\n                        .data(data)\r\n                        .enter();\r\n\r\n                // bar representating the kilogram\r\n                barGroups.append(\"rect\")\r\n                        .attr(\"class\", \"bar\")\r\n                        .style(\"fill\", \"#E282D30\")\r\n                        .attr(\"x\", function (d) { return x(d.day) - 3; }) //position the bar by reference of the center\r\n                        .attr(\"width\", 5)//x.bandwidth()\r\n                        .attr(\"y\", function (d) { return y(d.kilogram); })\r\n                        .attr(\"height\", function (d) { return height - y(d.kilogram); });\r\n\r\n                // bar representating the calories\r\n                barGroups.append(\"rect\")\r\n                        .attr(\"class\", \"bar\")\r\n                        .style(\"fill\", \"#E60000\")\r\n                        .attr(\"x\", function (d) { return x(d.day)+8 ; })//position of the bar of calories\r\n                        .attr(\"width\", 5)//x.bandwidth()   width of the bar\r\n                        .attr(\"y\", function (d) { return y1(d.calories) }) \r\n                        .attr(\"height\", function (d) { return (height) - y1((d.calories)); })\r\n                   \r\n                //bar representating the kilogram and calories for hover\r\n                barGroups.append(\"rect\")\r\n                        .attr(\"class\", \"barhover\")\r\n                        .attr(\"x\", function (d) { return x(d.day) - 15; }) //position the bar by reference of the center\r\n                        .attr(\"width\", 40)//x.bandwidth() || 5\r\n                        .attr(\"y\", function (d) { return y(d3.max(data, d => d.kilogram)); })\r\n                        .attr(\"height\", function (d) { return height })\r\n                        .on(\"mouseover\", function (event, d) {\r\n                                d3.selectAll(\".barhover\").style(\"opacity\", 0);\r\n                                d3.select(this)\r\n                                        .transition()\r\n                                        .duration(200)\r\n                                        .style(\"opacity\", \"0.5\");\r\n                                tooltip.transition()\r\n                                        .duration(200)\r\n                                        .style(\"opacity\", .9);\r\n                                tooltip.html(function () {\r\n                                        return (`<p>${d.kilogram}kg</p><p>${d.calories}kcal</p>`);\r\n                                })\r\n                                        .style(\"left\", (90 + x(d.day)) + \"px\")     //event.pageX\r\n                                        .style(\"top\", (y(d.kilogram) + margin.top) + \"px\");\r\n                        })\r\n                        .on(\"mouseout\", function (event, d) {\r\n                                d3.selectAll(\".barhover\").style(\"opacity\", 0);\r\n                                tooltip.style(\"opacity\", 0);\r\n\r\n                        });\r\n\r\n                //add the y Axis\r\n                barchart.append(\"g\").call(yAxis);\r\n\r\n                //add the x Axis\r\n                barchart.append(\"g\").call(xAxis); \r\n\r\n        }, [propsData]);\r\n\r\n        return (\r\n                <div className=\"content-barchart\" id=\"barchart\" ></div>\r\n        )\r\n}\r\nexport default BarChart\r\n","import { useEffect } from \"react\"\r\nimport * as d3 from \"d3\";\r\n\r\nconst LineChart = ({ propsDataAverage }) => {\r\n\r\n    useEffect(() => {\r\n        if (propsDataAverage) {\r\n            const dataAverage = propsDataAverage.data.sessions;\r\n            draw(dataAverage);\r\n        }\r\n\r\n    }, [propsDataAverage]);\r\n\r\n    const draw = (dataAverage) => {\r\n\r\n        const parentWidth = document.getElementById(\"linechart\").clientWidth;\r\n        const parentHeight = document.getElementById(\"linechart\").clientHeight;\r\n\r\n        //set the dimensions and margin of the graph\r\n        const margin = { top: 80, right: 30, bottom: 30, left: 30 };\r\n        const width = parentWidth - margin.left - margin.right;\r\n        const height = parentHeight - margin.top - margin.bottom;\r\n\r\n        const dayLetter = [\"Lu\", \"Ma\", \"Me\", \"Je\", \"Ve\", \"Sa\", \"Di\"]\r\n        var linear = 100;\r\n\r\n        // set the ranges of y for day of weeks\r\n        const xScale = d3.scaleLinear()\r\n            .domain([dataAverage[0].day, dataAverage.length])  // rajouter +1 a la longeur pour afficher le dim\r\n            .range([0, width]); // largeur du graph sur x\r\n\r\n        // set the ranges of y for sessions time\r\n        const yScale = d3.scaleLinear()\r\n            .domain([d3.min(dataAverage, d => d.sessionLength) , d3.max(dataAverage, d => d.sessionLength)]) // scale range of data y\r\n            .range([height, 0]);// hauteur du gaph sur y\r\n\r\n        // define the line\r\n        const line = d3.line()\r\n            .x((d) => xScale(d.day))\r\n            .y((d) => yScale(d.sessionLength))\r\n            .curve(d3.curveCardinal);\r\n\r\n        //cleaning svg on the node DOM with parent's id #barchart\r\n        var linechartContainer = d3.select(\"#linechart\");\r\n        linechartContainer.selectAll(\"*\").remove();\r\n\r\n        //create svg on the node DOM with parent's id #barchart\r\n        const linechartSvg = linechartContainer.append(\"svg\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom);\r\n\r\n        //creation du linear gradient\r\n        // Create the svg:defs element and the main gradient definition.\r\n        const svgDefs = linechartSvg.append('defs');\r\n        var mainGradient = svgDefs.append('linearGradient')\r\n            .attr('id', 'mainGradient');\r\n\r\n        // Create the stops of the main gradient. Each stop will be assigned\r\n        // a class to style the stop using CSS.\r\n\r\n        mainGradient.append('stop')\r\n            .attr('class', 'stop-left')\r\n            .attr('offset', '0%');\r\n\r\n        var gradient = mainGradient.append('stop')\r\n            .attr('class', 'stop-left')\r\n            .attr('offset', `${linear}%`);\r\n\r\n        mainGradient.append('stop')\r\n            .attr('class', 'stop-right')\r\n            .attr('offset', '0%');\r\n\r\n        mainGradient.append('stop')\r\n            .attr('class', 'stop-right')\r\n            .attr('offset', '100%');\r\n\r\n        linechartSvg.append('rect')\r\n            .classed('filled', true)\r\n            .attr('x', 0)\r\n            .attr('y', 0)\r\n            .attr('width', width + margin.left)\r\n            .attr('height', height + margin.top + margin.bottom);\r\n\r\n        //create legend\r\n        linechartSvg.append(\"text\")\r\n            .attr(\"class\", \"line-chart__legend\")\r\n            .attr(\"x\", 5)\r\n            .attr(\"y\", margin.top / 4)\r\n            .text(\"Durée moyenne des sessions\")\r\n            .style(\"font-size\", \"1.5rem\")\r\n            .attr(\"alignment-baseline\", \"middle\")\r\n            .style(\"fill\", \"white\");\r\n\r\n        // creation du tableau et décalage au centre\r\n        const lineChart = linechartSvg.append(\"g\")\r\n           // .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n           .attr(\"transform\", \"translate(\" + margin.left + \",\" + (margin.top - 20) + \")\");\r\n\r\n        //define the line curve for the first line\r\n        lineChart.append(\"path\")\r\n            .data(dataAverage)\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", \"white\")\r\n            .attr(\"stroke-width\", 2)\r\n            .attr(\"class\", \"line\")\r\n            .attr(\"d\", line(dataAverage));\r\n\r\n        //scale or legend of x Axis\r\n        const xAxisGenerator = g => g\r\n            .attr(\"class\", \"linechart-xAxis\")\r\n            .attr(\"transform\", \"translate(0,\" + (height + 20) + \")\") //deplacement vers le bas de l'abscisse\r\n            .style(\"font-size\", \"12px\")\r\n            .style(\"color\", 'white')\r\n            .call(d3.axisBottom(xScale).ticks(5).tickSize(0).tickFormat((d, i) => dayLetter[i]))//remove little tick foward legend tickSizeInner or ticksSizeOuter   .tickSize(0) .tickFormat(d3.format(\".0\"))  .tickSize(0).tickFormat(d3.format(\".1\"))\r\n            .call(g => g.select(\".domain\").remove()); // remove the horizontal line forward legend\r\n\r\n        // scale or legend of y axis\r\n        const yAxisGenerator = g => g\r\n            .attr(\"class\", \"linechart-yAxis\")\r\n            .attr(\"transform\", \"translate(\" + width + \",0)\")// only for rigth ordonnée is on left by default\r\n            .style(\"font-size\", \"12px\")\r\n            .style(\"color\", 'white')\r\n            .call(d3.axisLeft().scale(yScale)) // put the legend at right to bar y .tickSizeOuter(-500).tickSizeInner(0)   .tickFormat(d3.format(\".2\")).ticks(2).tickSize(-width)\r\n\r\n        //create  line  on vertical \r\n        const axisLine = linechartSvg\r\n            .append(\"g\")\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"dotted\")\r\n            .attr(\"stroke-width\", \"1px\")\r\n            .attr(\"width\", \".5px\")\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            .style(\"opacity\", \"0\")\r\n\r\n        var focus = lineChart.append('g')\r\n            .append('circle')\r\n            .style(\"fill\", \"white\")\r\n            .attr(\"stroke\", \"black\")\r\n            .attr('r', 4)\r\n            .style(\"opacity\", 0);\r\n\r\n        // div for tooltip\r\n        const focusText = d3.select(\"#linechart\").append(\"div\")\r\n            .attr(\"class\", \"focus-text\")\r\n            .style(\"opacity\", 0);\r\n\r\n        // Create a rect on top of the svg area: this rectangle recovers mouse position\r\n        lineChart\r\n            .append('rect')\r\n            .style(\"fill\", \"none\")\r\n            .style(\"pointer-events\", \"all\")\r\n            .attr('width', width)\r\n            .attr('height', height)\r\n            .on('click', onclick)\r\n            .on('mousemove', mousemove)\r\n            .on('mouseout', mouseout);\r\n\r\n        function mousemove(e) {\r\n            var bisectDay = d3.bisector((d) => d.day).left;\r\n            const mousePosition = d3.pointer(e)\r\n            var currentX = xScale.invert(mousePosition[0]) + 1;\r\n            var xCurve = bisectDay(dataAverage, currentX);\r\n            var currentData = dataAverage.filter((d) => d.day === xCurve);\r\n            if (currentX >= 1) {\r\n                var yCurve = currentData[0].sessionLength;\r\n                focus.style(\"opacity\", \"1\")\r\n                    .attr(\"cx\", xScale(xCurve))\r\n                    .attr(\"cy\", yScale(yCurve));\r\n                axisLine.attr(\"x\", xScale(currentX))\r\n                    .style(\"opacity\", \"1\");\r\n                focusText.html(function () {\r\n                    return (`<p>${currentData[0].sessionLength}min</p>`);\r\n                }).style(\"opacity\", \"1\")\r\n                    .style(\"left\", xScale(xCurve) + 30 + \"px\")\r\n                    .style(\"top\", yScale(yCurve) + 60 + \"px\")\r\n                    .style(\"border-radius\", \"2px\");\r\n\r\n                var rec = width + margin.left\r\n                linear = ((xScale(currentX) / rec) * 100);\r\n                gradient.attr('offset', `${linear}%`);\r\n            }\r\n        }\r\n\r\n        function mouseout() {\r\n            focus.style(\"opacity\", 0)\r\n            focusText.style(\"opacity\", 0)\r\n            axisLine.style(\"opacity\", 0)\r\n        }\r\n\r\n        //add the y Axis\r\n       // lineChart.append(\"g\").call(yAxisGenerator);\r\n\r\n        //add the x Axis\r\n        lineChart.append(\"g\").call(xAxisGenerator);\r\n    }\r\n\r\n    return (\r\n        <div className=\"line-chart\" id=\"linechart\">\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineChart","import { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst RadarChart = ( {propsDataPerformance} ) => {\r\n    const dataPerformance = propsDataPerformance.data;\r\n    useEffect(() => {\r\n        draw(dataPerformance)\r\n    }, [dataPerformance]);\r\n\r\n    function draw(data) {\r\n\r\n        const parentWidth = document.getElementById(\"radarchart\").clientWidth;\r\n        const parentHeight = document.getElementById(\"radarchart\").clientHeight;\r\n\r\n        //set the dimensions and margin of the graph\r\n        const margin = { top: 5, right: 5, bottom: 5, left: 5 };\r\n        const width = parentWidth - margin.left - margin.right;\r\n        const height = parentHeight - margin.top - margin.bottom;\r\n        const nbSides = Object.keys(data.kind).length  // nb of polygon's sides\r\n\r\n        const polyParam = {\r\n            nbLevel: 5,  // nb of level\r\n            offset: Math.PI, // polygon start on top ( same as horloge)\r\n            size: Math.min(width, height),// width and height of svg\r\n            polyangle: (Math.PI * 2) / nbSides, // value of angle for each sector in radians\r\n            r_0: 0.70 * Math.min(width, height) / 2 // max width of radar\r\n        }\r\n\r\n        // coordonate of center \r\n        const center = {\r\n            x: polyParam.size / 2,\r\n            y: polyParam.size / 2\r\n        }\r\n\r\n        const radarChartContainer = d3.select(\"#radarchart\");\r\n        radarChartContainer.selectAll(\"*\").remove();\r\n\r\n        const wrapperSvg = radarChartContainer.append(\"svg\")\r\n            .attr(\"width\", polyParam.size + margin.right + margin.left)\r\n            .attr(\"height\", polyParam.size + margin.top + margin.bottom);\r\n\r\n        const g = wrapperSvg.append(\"g\").attr(\"transform\", \"translate( 0 ,\" + margin.top * 2 + \")\");\r\n\r\n        const scale = d3.scaleLinear()\r\n            .domain([0, d3.max(dataPerformance.data, d => d.value)])\r\n            .range([0, polyParam.r_0]);\r\n\r\n        /**\r\n         * Generate coordonate of vertex's polygon\r\n         * @param {number} length The lenght of hypothenus.\r\n         * @param {number} angle The second number to add.\r\n         * @return {object} The result it's point of vertex.\r\n         */\r\n        const generatePoint = ({ length, angle }) => {\r\n            const point = {\r\n                x: center.x + (length * Math.sin(polyParam.offset - angle)),\r\n                y: center.x + (length * Math.cos(polyParam.offset - angle))\r\n            };\r\n            return point;\r\n        }\r\n\r\n        /** \r\n         * Draw the line between two points (vertex) of polygon\r\n         * @param {number} points an array of vertex.\r\n         * @param {DOM} parent The parent container.\r\n         */\r\n        const drawPath = (points, parent) => {\r\n            const lineGenerator = d3.line()\r\n                .x(d => d.x)\r\n                .y(d => d.y);\r\n\r\n            parent.append(\"path\").attr(\"d\", lineGenerator(points))\r\n        };\r\n\r\n        /** \r\n         * Generate and draw multi-levels of polygon\r\n         * @param {number} levelsCount the number of level.\r\n         * @param {number} sideCount The number of polygon's side.\r\n         */\r\n        const generateAndDrawLevels = (levelsCount, sideCount) => {\r\n            for (let level = 1; level <= levelsCount; level++) {\r\n                const hyp = (level / levelsCount) * polyParam.r_0;\r\n                const points = [];\r\n                for (let vertex = 0; vertex < sideCount; vertex++) {\r\n                    const theta = vertex * polyParam.polyangle;\r\n                    points.push(generatePoint({ length: hyp, angle: theta }));\r\n                }\r\n                const group = g.append(\"g\").attr(\"class\", \"levels\")\r\n                    .attr(\"fill\", \"none\")\r\n                    .attr(\"stroke\", \"white\")\r\n                    .attr(\"stroke-width\", 2);\r\n                drawPath([...points, points[0]], group);\r\n            }\r\n        };\r\n\r\n       /** \r\n       * Display a circle for each point end\r\n       * @param {array} points array of object.\r\n       */\r\n        const drawCircles = (points => {\r\n            g.append(\"g\")\r\n                .attr(\"class\", \"indic\")\r\n                .selectAll(\"circle\")\r\n                .data(points)\r\n                .enter()\r\n                .append(\"circle\")\r\n                .attr(\"cx\", d => d.x)\r\n                .attr(\"cy\", d => d.y)\r\n                .attr(\"r\", 1)\r\n                .attr(\"fill\", \"red\")\r\n        });\r\n\r\n       /** \r\n       * Build and display the graph of data\r\n       * @param {array<Object>} dataset The number of polygon's side.\r\n       * @param {number} n number of face \r\n       */\r\n        const drawData = (dataset, n) => {\r\n            const points = [];\r\n            dataset.forEach((d, i) => {\r\n                const len = scale(d.value);\r\n                const theta = i * (2 * Math.PI / n);\r\n                points.push(\r\n                    {\r\n                        ...generatePoint({ length: len, angle: theta }),\r\n                        value: d.value\r\n                    });\r\n            });\r\n\r\n            const group = g.append(\"g\").attr(\"class\", \"shape\")\r\n                .attr(\"fill\", \"red\")\r\n                .style(\"opacity\", 0.7);\r\n\r\n            drawPath([...points, points[0]], group);\r\n            drawCircles(points);\r\n        };\r\n\r\n        /** \r\n       * Build data for assign name and value \r\n       * @return {array<Object>} object with name and value for each kind\r\n       */\r\n        const generateData = () => {\r\n            const dataD = [];\r\n            dataPerformance.data.forEach((v) => {\r\n                let kind = v.kind\r\n                return dataD.push(\r\n                    {\r\n                        name: Object.entries(dataPerformance.kind)\r\n                            .filter(([k, v]) => k === kind.toString())\r\n                            .map((v) => v[1]),\r\n                        value: v.value\r\n                    }\r\n                );\r\n            })\r\n            return dataD;\r\n        };\r\n\r\n        /** \r\n       * Display the text legend \r\n       * @param {string} text \r\n       * @param {array<object>} point coordonate x and y\r\n       * @param {Dom} group parent dom\r\n       */\r\n        const drawText = (text, point, group) => {\r\n            group.append(\"text\")\r\n                .attr(\"x\", point.x)\r\n                .attr(\"y\", point.y)\r\n                .html(text)\r\n                .attr(\"fill\", \"white\")\r\n                .style(\"text-anchor\", \"middle\")\r\n                .style(\"font-size\", \"12px\")\r\n                .style(\"font-family\", \"sans-serif\")      \r\n        };\r\n\r\n         /** \r\n       * Build the text legend \r\n       * @param {number} sideCount nb of face's polygon \r\n       * @param {array<object>} dataset c\r\n       */\r\n        const drawLabels = (dataset, sideCount) => {\r\n            const groupL = g.append(\"g\").attr(\"class\", \"labels\")\r\n            for (let vertex = 0; vertex < sideCount; vertex++) {\r\n                const angle = vertex * polyParam.polyangle;\r\n                const label = dataset[vertex].name;\r\n                const point = generatePoint({ length: 0.9 * (polyParam.size / 2), angle });\r\n                drawText(label, point, groupL);\r\n            }\r\n        };\r\n\r\n        const dataset = generateData();\r\n        generateAndDrawLevels(polyParam.nbLevel, nbSides);\r\n        drawData(dataset, nbSides);\r\n        drawLabels(dataset, nbSides);\r\n    }\r\n\r\n    return (\r\n        <div className=\"radar-chart\" id=\"radarchart\">\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadarChart\r\n\r\n","import * as d3 from \"d3\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst RadialChart = ({ propsDataRadial }) => {\r\n\r\n    const dataRadial = propsDataRadial.data\r\n\r\n    useEffect(() => {\r\n\r\n        draw();\r\n    })\r\n\r\n    function draw() {\r\n\r\n        const parentWidth = document.getElementById(\"radialchart\").clientWidth;\r\n        const parentHeight = document.getElementById(\"radialchart\").clientHeight;\r\n\r\n        //set the dimensions and margin of the graph\r\n        const margin = { top: 10, right: 10, bottom: 10, left: 10 };\r\n        const width = parentWidth - margin.left - margin.right;\r\n        const height = parentHeight - margin.top - margin.bottom;\r\n\r\n        // parameter of circle\r\n        const radialParam = {\r\n            PI: Math.PI,\r\n            arcMinRadius: 0.50 * Math.min(width, height) / 2,\r\n            arcPadding: 2, //padding from outer\r\n            size: Math.min(width, height),// width and height of svg\r\n            arcMaxRadius: 0.80 * Math.min(width, height) / 2\r\n        }\r\n\r\n        const center = {\r\n            x: radialParam.size / 2,\r\n            y: (radialParam.size / 2 + margin.top)\r\n        }\r\n\r\n        const data = [\r\n            {\r\n                score: (dataRadial.score * 100)\r\n            },\r\n            {\r\n                score: 100\r\n            }\r\n        ];\r\n\r\n        const radialChartContainer = d3.select(\"#radialchart\");\r\n        radialChartContainer.selectAll(\"*\").remove();\r\n\r\n        const svg = radialChartContainer.append(\"svg\")\r\n            .attr(\"width\", radialParam.size + margin.right + margin.left)\r\n            .attr(\"height\", radialParam.size + margin.top + margin.bottom)\r\n            .append(\"g\")\r\n            .attr(\"transform\", \"translate(\" + (center.x + margin.left) + \" ,\" + (center.y + margin.top) + \")\");\r\n\r\n        radialChartContainer.append(\"div\")\r\n            .attr(\"class\", \"radial-text__score\")\r\n            .style(\"position\", \"absolute\")\r\n            .style(\"width\", \"100px\")\r\n            .style(\"top\", ((center.y - 35) + \"px\"))\r\n            .style(\"left\", ((center.x - 35) + \"px\"))\r\n            .html(`<p style=\"font-size: 2.6rem; font-weight:700\">${data[0].score}%</p><p style=\"font-color: #74798C;\">de votre objectif</p>`)\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"class\", \"radial-text__legend\")\r\n            .attr(\"x\", (margin.left * 2 - center.x))\r\n            .attr(\"y\", (margin.top * 2 - center.y))\r\n            .text(\"Score\")\r\n            .attr(\"alignment-baseline\", \"central\");\r\n\r\n        let scale = d3.scaleLinear()\r\n            .domain([0, d3.max(data, d => d.score)])\r\n            .range([0, 2 * radialParam.PI]);\r\n\r\n        const numArcs = data.map((d, i) => d.name).length;\r\n        const arcWidth = (radialParam.arcMaxRadius - radialParam.arcMinRadius - numArcs * radialParam.arcPadding) / numArcs;\r\n\r\n        //create arc\r\n        let arc = d3.arc()\r\n            .innerRadius((d, i) => getInnerRadius(i))\r\n            .outerRadius((d, i) => getOuterRadius(i))\r\n            .startAngle(0)\r\n            .endAngle((d, i) => -scale(d))\r\n            .cornerRadius(10);\r\n\r\n        let radialAxis = svg.append('g')\r\n            .attr('class', 'r axis')\r\n            .selectAll('g')\r\n            .data(data)\r\n            .enter().append('g');\r\n\r\n        // create circle\r\n        radialAxis.append('circle')\r\n            .attr('r', (d, i) => getOuterRadius(i) + radialParam.arcPadding)\r\n            .attr(\"class\", (d, i) => `radialcircle${i}`);\r\n\r\n        //data arcs\r\n        let arcs = svg.append('g')\r\n            .attr('class', 'data')\r\n            .selectAll('path')\r\n            .data(data)\r\n            .enter().append('path')\r\n            .attr('class', (d, i) => `arc${i}`);\r\n\r\n        arcs.transition()\r\n            .delay((d, i) => i * 200)\r\n            .duration(1000)\r\n            .attrTween('d', arcTween);\r\n\r\n        function arcTween(d, i) {\r\n            let interpolate = d3.interpolate(0, d.score);\r\n            return t => arc(interpolate(t), i);\r\n        }\r\n\r\n        /**\r\n         * Calc the inner radius for each circle\r\n         * @param {number} index of circle\r\n         * @returns number for innerRadius \r\n         */\r\n        function getInnerRadius(index) {\r\n            return radialParam.arcMinRadius + (numArcs - (index + 1)) * (arcWidth + radialParam.arcPadding);\r\n        }\r\n\r\n        /**\r\n         * Calc the outer radius for each circle\r\n         * @param {number} index of circle\r\n         * @returns number for outer radius \r\n         */\r\n        function getOuterRadius(index) {\r\n            return getInnerRadius(index) + arcWidth;\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"radial-chart\" id=\"radialchart\">\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadialChart","\r\n/**\r\n * function to build tags for calories, proteines, glucides and lipides \r\n * @param{array<Object>} propsDataKey\r\n */ \r\nconst KeyData = ({propsDataKey}) => {\r\n\r\n    return (\r\n        <div className=\"container-keydata\">\r\n            <div className=\"content-keydata\">\r\n                <div className=\"keydata-logo\" style={{backgroundColor :propsDataKey.background}}>\r\n                    <img className=\"keydata-logo__img\" src={propsDataKey.img} alt=\"\" />\r\n                </div>\r\n                <div className=\"keydata-text\">\r\n                    <p className=\"keydata-text__value\">{propsDataKey.value}</p>\r\n                    <p className=\"keydata-text__name\">{propsDataKey.name}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default KeyData","export const USER_MAIN_DATA = [\r\n    {\r\n        id: 12,\r\n        userInfos: {\r\n            firstName: 'Karl',\r\n            lastName: 'Dovineau',\r\n            age: 31,\r\n        },\r\n        score: 0.12,\r\n        keyData: {\r\n            calorieCount: 1930,\r\n            proteinCount: 155,\r\n            carbohydrateCount: 290,\r\n            lipidCount: 50\r\n        }\r\n    },\r\n    {\r\n        id: 18,\r\n        userInfos: {\r\n            firstName: 'Cecilia',\r\n            lastName: 'Ratorez',\r\n            age: 34,\r\n        },\r\n        score: 0.3,\r\n        keyData: {\r\n            calorieCount: 2500,\r\n            proteinCount: 90,\r\n            carbohydrateCount: 150,\r\n            lipidCount: 120\r\n        }\r\n    }\r\n]\r\n\r\nexport const USER_ACTIVITY = [\r\n    {\r\n        userId: 12,\r\n        sessions: [\r\n            {\r\n                day: '2020-07-01',\r\n                kilogram: 80,\r\n                calories: 240\r\n            },\r\n            {\r\n                day: '2020-07-02',\r\n                kilogram: 80,\r\n                calories: 220\r\n            },\r\n            {\r\n                day: '2020-07-03',\r\n                kilogram: 81,\r\n                calories: 280\r\n            },\r\n            {\r\n                day: '2020-07-04',\r\n                kilogram: 81,\r\n                calories: 290\r\n            },\r\n            {\r\n                day: '2020-07-05',\r\n                kilogram: 80,\r\n                calories: 160\r\n            },\r\n            {\r\n                day: '2020-07-06',\r\n                kilogram: 78,\r\n                calories: 162\r\n            },\r\n            {\r\n                day: '2020-07-07',\r\n                kilogram: 76,\r\n                calories: 390\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId: 18,\r\n        sessions: [\r\n            {\r\n                day: '2020-07-01',\r\n                kilogram: 70,\r\n                calories: 240\r\n            },\r\n            {\r\n                day: '2020-07-02',\r\n                kilogram: 69,\r\n                calories: 220\r\n            },\r\n            {\r\n                day: '2020-07-03',\r\n                kilogram: 70,\r\n                calories: 280\r\n            },\r\n            {\r\n                day: '2020-07-04',\r\n                kilogram: 70,\r\n                calories: 500\r\n            },\r\n            {\r\n                day: '2020-07-05',\r\n                kilogram: 69,\r\n                calories: 160\r\n            },\r\n            {\r\n                day: '2020-07-06',\r\n                kilogram: 69,\r\n                calories: 162\r\n            },\r\n            {\r\n                day: '2020-07-07',\r\n                kilogram: 69,\r\n                calories: 390\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n\r\nexport const USER_AVERAGE_SESSIONS = [\r\n    {\r\n        userId: 12,\r\n        sessions: [\r\n            {\r\n                day: 1,\r\n                sessionLength: 30\r\n            },\r\n            {\r\n                day: 2,\r\n                sessionLength: 23\r\n            },\r\n            {\r\n                day: 3,\r\n                sessionLength: 45\r\n            },\r\n            {\r\n                day: 4,\r\n                sessionLength: 50\r\n            },\r\n            {\r\n                day: 5,\r\n                sessionLength: 0\r\n            },\r\n            {\r\n                day: 6,\r\n                sessionLength: 0\r\n            },\r\n            {\r\n                day: 7,\r\n                sessionLength: 60\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId: 18,\r\n        sessions: [\r\n            {\r\n                day: 1,\r\n                sessionLength: 30\r\n            },\r\n            {\r\n                day: 2,\r\n                sessionLength: 40\r\n            },\r\n            {\r\n                day: 3,\r\n                sessionLength: 50\r\n            },\r\n            {\r\n                day: 4,\r\n                sessionLength: 30\r\n            },\r\n            {\r\n                day: 5,\r\n                sessionLength: 30\r\n            },\r\n            {\r\n                day: 6,\r\n                sessionLength: 50\r\n            },\r\n            {\r\n                day: 7,\r\n                sessionLength: 50\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n\r\nexport const USER_PERFORMANCE = [\r\n    {\r\n        userId: 12,\r\n        kind: {\r\n            1: 'cardio',\r\n            2: 'energy',\r\n            3: 'endurance',\r\n            4: 'strength',\r\n            5: 'speed',\r\n            6: 'intensity'\r\n        },\r\n        data: [\r\n            {\r\n                value: 80,\r\n                kind: 1\r\n            },\r\n            {\r\n                value: 120,\r\n                kind: 2\r\n            },\r\n            {\r\n                value: 140,\r\n                kind: 3\r\n            },\r\n            {\r\n                value: 50,\r\n                kind: 4\r\n            },\r\n            {\r\n                value: 200,\r\n                kind: 5\r\n            },\r\n            {\r\n                value: 90,\r\n                kind: 6\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId: 18,\r\n        kind: {\r\n            1: 'cardio',\r\n            2: 'energy',\r\n            3: 'endurance',\r\n            4: 'strength',\r\n            5: 'speed',\r\n            6: 'intensity'\r\n        },\r\n        data: [\r\n            {\r\n                value: 200,\r\n                kind: 1\r\n            },\r\n            {\r\n                value: 240,\r\n                kind: 2\r\n            },\r\n            {\r\n                value: 80,\r\n                kind: 3\r\n            },\r\n            {\r\n                value: 80,\r\n                kind: 4\r\n            },\r\n            {\r\n                value: 220,\r\n                kind: 5\r\n            },\r\n            {\r\n                value: 110,\r\n                kind: 6\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n","import React, { useEffect, useState, useAsync } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport { getInfosUser, getUserActivity, getUserAverage, getUserPerformance } from '../../api/services';\r\nimport Sidebar from '../../components/SideBar';\r\nimport BarChart from '../../components/BarChart';\r\nimport LineChart from '../../components/Linechart';\r\nimport RadarChart from '../../components/Radarchart';\r\nimport RadialChart from '../../components/Radialchart';\r\nimport KeyData from '../../components/Keydata';\r\nimport { getUserPerformanceMocked, getInfosUserMocked, getUserActivityMocked, getUserAverageMocked } from '../../api/mocks/services';\r\n\r\nfunction Dashboard() {\r\n\r\n    const [userInformation, setUserInformation] = useState(null);\r\n    const [userActivity, setUserActivity] = useState([]);\r\n    const [userPerformance, setUserPerformance] = useState([]);\r\n    const [isError, setIsError] = useState();\r\n    const [isDataLoading, setDataLoading] = useState(false);\r\n    const { id } = useParams();\r\n    const [userAverage, setUserAverage] = useState([]);\r\n    const [userKeys, setUserKeys] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const develop = true;\r\n\r\n        if (develop) {  // for working with local file\r\n        \r\n            setUserInformation(() => getInfosUserMocked(id));\r\n            setUserActivity(() => getUserActivityMocked(id));\r\n            setUserAverage(() => getUserAverageMocked(id));\r\n            setUserPerformance(() => getUserPerformanceMocked(id));\r\n            setIsError(false)\r\n            \r\n        } else {     //for working with api on serveur\r\n            Promise.all([\r\n                getInfosUser(id).then((dataInfo) => {\r\n                    setUserInformation(dataInfo);\r\n                }),\r\n                getUserActivity(id).then((dataActivity) => {\r\n                    setUserActivity(dataActivity);\r\n                }),\r\n                getUserAverage(id).then((dataAverage) => {\r\n                    setUserAverage(dataAverage);\r\n                }),\r\n                getUserPerformance(id).then((dataPerformance) =>{\r\n                    setUserPerformance(dataPerformance);\r\n                })\r\n\r\n            ]).then((resp) => {\r\n                setIsError(false)\r\n\r\n            }).catch((err) => {\r\n                setIsError(true)\r\n            })\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        if (userInformation && isError=== false)  {\r\n            toBuildDataKey();\r\n        }\r\n    }, [userInformation, isError]);\r\n\r\n\r\n    const toBuildDataKey = () => {\r\n        setUserKeys(() => [{\r\n            name: \"Calories\",\r\n            value: `${parseFloat(userInformation.data.keyData.calorieCount / 1000).toFixed(3)}Kcal`,\r\n            img: `${process.env.PUBLIC_URL}/iconcalorie.png`,\r\n            background: '#FF000020'\r\n        },\r\n        {\r\n            name: \"Proteines\",\r\n            value: `${userInformation.data.keyData.proteinCount}g`,\r\n            img: `${process.env.PUBLIC_URL}/iconproteine.png`,\r\n            background: '#4ABAFF20'\r\n        },\r\n        {\r\n            name: \"Glucides\",\r\n            value: `${userInformation.data.keyData.carbohydrateCount}g`,\r\n            img: `${process.env.PUBLIC_URL}/iconglucide.png`,\r\n            background: '#F9CE2320'\r\n        },\r\n        {\r\n            name: \"Lipides\",\r\n            value: `${userInformation.data.keyData.lipidCount}g`,\r\n            img: `${process.env.PUBLIC_URL}/cheeseburger.png`,\r\n            background: '#FF000020'\r\n        }\r\n        ]);\r\n\r\n        setDataLoading(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-profil\">\r\n            <div className=\"container-profil__sidebar\">\r\n                <Sidebar />\r\n            </div>\r\n            {isDataLoading && (\r\n                <section className=\"container-profil__dashboard\">\r\n                    <div className=\"content__dashboard-header\">\r\n                        <h1 className=\"sr-only\">{`Résumé des performances de ${userInformation.data.userInfos.firstName}`}</h1>\r\n                        <h2 className=\"dashboard-header__user\" key={`${userInformation.data.id}`}>Bonjour <span>{`${userInformation.data.userInfos.firstName}`}</span></h2>\r\n                        <p className=\"dashboard-header__resume\">Félicitation ! vous avez explosé vos objectifs hier ! 👏</p>\r\n                    </div>\r\n                    <div className=\"content-dashboard__activities\">\r\n                        <div className=\"dashboard-activities__center\">\r\n                            <div className=\"dashboard-activity__today\">\r\n                                <BarChart propsData={userActivity} />\r\n                            </div>\r\n                            <div className=\"profil__activity-group\">\r\n                                <div className=\"profil__activity-coverage\">\r\n                                    <LineChart propsDataAverage={userAverage} />\r\n                                </div>\r\n\r\n                                <div className=\"profil__activity-radar\">\r\n                                    <RadarChart propsDataPerformance={userPerformance} />\r\n                                </div>\r\n\r\n                                <div className=\"profil__activity-score\">\r\n                                    <RadialChart propsDataRadial={userInformation} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profil__activity-side\">\r\n                            {userKeys.map((data) => <KeyData key={data.name} propsDataKey={data} />)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n            {isError && (\r\n                <h1 className=\"error\">Serveur en maintenance</h1>\r\n            )}\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard\r\n","import { USER_ACTIVITY, USER_MAIN_DATA, USER_AVERAGE_SESSIONS, USER_PERFORMANCE} from '../data/data.js'\r\n\r\nexport const getInfosUserMocked = (id) => {\r\n\r\n     let response =USER_MAIN_DATA\r\n    .filter(user => user.id === Number(id)).shift();\r\n    return {data: response}\r\n}\r\n\r\nexport const getUserActivityMocked = (id) =>{\r\n    let response = USER_ACTIVITY\r\n    .filter(user=>user.userId === Number(id)).shift();\r\n    return {data: response}\r\n}\r\n\r\nexport const getUserAverageMocked =(id)=>{\r\n    let response = USER_AVERAGE_SESSIONS\r\n    .filter(user=>user.userId === Number(id)).shift();\r\n    return {data: response}\r\n}\r\n\r\nexport const getUserPerformanceMocked =(id) =>{\r\n    let response = USER_PERFORMANCE\r\n    .filter(user=>user.userId === Number(id)).shift();\r\n    return {data: response}\r\n}","import Profil from '../pages/Profil'\r\n\r\nconst router = () => {\r\n\r\n  return [\r\n    {\r\n      path: \"/profil/:id\",\r\n      component: Profil\r\n    }\r\n  ]\r\n\r\n}\r\nexport default router\r\n\r\n","import { NavLink } from \"react-router-dom\"\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <ul className=\"navbar__ul\">\r\n                <li><NavLink className=\"navbar__link\" to=\"/Accueil\">Accueil</NavLink></li>\r\n                <li><NavLink className=\"navbar__link\" to=\"/Profil\">Profil</NavLink></li>\r\n                <li><NavLink className=\"navbar__link\" to=\"/Reglage\">Réglage</NavLink></li>\r\n                <li><NavLink className=\"navbar__link\" to=\"/Communaute\">Communauté</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n\r\n    )\r\n}\r\nexport default Navbar","import Navbar from './NavBar';\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <header className=\"content-header\">\r\n            <div className=\"content-logo\">\r\n                <img className=\"logo\" src={process.env.PUBLIC_URL + \"/logo.png\"} alt=\"logo\" />\r\n            </div>\r\n            <div className=\"content-navbar\">\r\n                <Navbar />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom' // BrowserRouter as Router\r\nimport NotFound from '../NotFound';\r\nimport Routage from '../../route/route-user';\r\nimport Header from '../../components/Header'\r\n\r\nconst App = () => {\r\n\r\n    const userId = 18;\r\n    return (\r\n        <Router>\r\n            <Header />\r\n            <Switch>\r\n                <Redirect exact from=\"/\" to={`/profil/${userId}`} />\r\n                {\r\n                    Routage().map((route, i) => <Route key={i} path={route.path} component={route.component} />)\r\n                }\r\n                <Route path=\"*\" component={NotFound} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './pages/App';\r\nimport './sass/main.css';\r\n\r\nReactDOM.render(\r\n\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n  \r\n);\r\n\r\n"],"sourceRoot":""}