{"version":3,"sources":["reportWebVitals.js","pages/NotFound/index.jsx","components/SideBar/index.jsx","components/BarChart/index.jsx","components/Linechart/index.jsx","components/Radarchart/index.jsx","api/mocks/data/data.js","pages/Profil/index.jsx","api/mocks/services/index.jsx","route/route-user.jsx","components/Header/NavBar/index.jsx","components/Header/index.jsx","pages/App/index.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NotFound","className","to","Sidebar","src","process","alt","BarChart","propsData","useEffect","parentWidth","document","getElementById","clientWidth","parentHeight","clientHeight","data","sessions","forEach","d","day","slice","margin","width","height","x","d3","domain","map","range","padding","y","kilogram","nice","y1","calories","barchartContainer","selectAll","remove","barchartSvg","append","attr","style","text","barchart","tooltip","barGroups","enter","on","event","this","transition","duration","html","call","g","tickFormat","ticks","tickSize","select","id","LineChart","propsDataAverage","dataAverage","draw","dayLetter","linear","xScale","length","yScale","sessionLength","line","curve","linechartContainer","linechartSvg","mainGradient","toto","classed","lineChart","axisLine","focus","focusText","onclick","e","bisectDay","left","mousePosition","currentX","invert","xCurve","currentData","filter","yCurve","rec","console","log","i","RadarChart","dataPerformance","propsDataPerformance","top","right","bottom","value","nbSides","nbLevel","offset","Math","PI","r","v","kind","USER_MAIN_DATA","userInfos","firstName","lastName","age","todayScore","keyData","calorieCount","proteinCount","carbohydrateCount","lipidCount","score","USER_ACTIVITY","userId","USER_AVERAGE_SESSIONS","USER_PERFORMANCE","Dashboard","useState","userInformation","setUserInformation","userActivity","setUserActivity","userPerformance","setUserPerformance","isError","isDataLoading","setDataLoading","useParams","userAverage","setUserAverage","user","Number","shift","getInfosUserMocked","getUserActivityMocked","getUserAverageMocked","getUserPerformanceMocked","router","path","component","Profil","Navbar","Header","App","exact","from","route","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.87a71c1f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction NotFound() {\r\n\r\n    return (\r\n        <div className=\"container-notFound\">\r\n            <section className=\"content-notFound\">\r\n                <h1 className=\"notFound-title\">404</h1>\r\n                <p className=\"notFound-text\">Oups! La page que vous demandez n'existe pas</p>\r\n                <div className=\"notFound-link\">\r\n                    <Link className=\"notFound-link__a\" to=\"/\">Retourner sur la page d'acceuil </Link>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NotFound","const Sidebar = () => {\r\n\r\n    return (\r\n        <div className=\"content-sidebar\">\r\n            <ul className=\"content-sidebar__icon\">\r\n               <li><img className=\"sidebar-icon__logo\" src={process.env.PUBLIC_URL + \"/iconYoga.png\"} alt=\"logo\" /></li>\r\n               <li><img className=\"sidebar-icon__logo\" src={process.env.PUBLIC_URL + \"/iconSwPool.png\"} alt=\"logo\" /></li>\r\n               <li><img className=\"sidebar-icon__logo\" src={process.env.PUBLIC_URL + \"/iconBiker.png\"} alt=\"logo\" /></li>\r\n               <li><img className=\"sidebar-icon__logo\" src={process.env.PUBLIC_URL + \"/iconAlter.png\"} alt=\"logo\" /></li>\r\n            </ul>\r\n            <p className=\"content-sidebar__text\">copyrigth,SportSee.2020</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar;","import { useEffect } from \"react\"\r\nimport * as d3 from \"d3\";\r\n\r\nconst BarChart = ({ propsData }) => {\r\n\r\n        useEffect(() => {\r\n                const parentWidth = document.getElementById(\"barchart\").clientWidth;\r\n                const parentHeight = document.getElementById(\"barchart\").clientHeight;\r\n                const data = propsData.data.sessions;\r\n                //change format of date\r\n                data.forEach((d) => {\r\n                        d.day = d.day.slice(9, 10)\r\n                })\r\n\r\n                //set the dimensions and margin of the graph\r\n                const margin = { top: 120, right: 60, bottom: 30, left: 20 };\r\n                const width = parentWidth - margin.left - margin.right;\r\n                const height = parentHeight - margin.top - margin.bottom;\r\n\r\n                // set the ranges of x (abscisse)\r\n                const x = d3.scaleBand()\r\n                        .domain(data.map(d => d.day))\r\n                        .range([0, width]) // largeur du graph sur x\r\n                        .padding(0.9);\r\n\r\n                // set the ranges of y for kilogram\r\n                const y = d3.scaleLinear()\r\n                        .domain([d3.min(data, d => d.kilogram) - 1, d3.max(data, d => d.kilogram)]) // range des valeurs sur y\r\n                        .nice()\r\n                        .range([height, 0])// hauteur du gaph sur y\r\n\r\n                //set range of y1 for calories\r\n                const y1 = d3.scaleLinear()\r\n                        .domain([d3.min(data, d => d.calories) - 100, d3.max(data, d => d.calories) + 100])// range des valeurs sur y\r\n                        .nice()\r\n                        .range([height, 0]); // hauteur du gaph sur y1\r\n\r\n                //scale or legend of x Axis\r\n                const xAxis = g => g\r\n                        .attr(\"class\", \"barchart-xAxis\")\r\n                        .attr(\"transform\", `translate(0,${height + 5})`) //deplacement vers le bas de l'abscisse\r\n                        .call(d3.axisBottom(x).tickSize(0))//remove little tick foward legend tickSizeInner or ticksSizeOuter\r\n                        .call(g => g.select(\".domain\").remove()) // remove the horizontal line forward legend\r\n\r\n                // scale or legend of y axis\r\n                const yAxis = g => g\r\n                        .attr(\"class\", \"barchart-yAxis\")\r\n                        .attr(\"transform\", `translate(${width},0)`)\r\n                        .style(\"font-size\", \"12px\")\r\n                        .call(d3.axisRight(y).tickFormat(d3.format(\".2\")).ticks(2).tickSize(-width)) // put the legend at right to bar y .tickSizeOuter(-500).tickSizeInner(0)\r\n                        .call(g => g.select(\".domain\").remove()) // remove the vertical line forward legend\r\n\r\n                //cleaning svg on the node DOM with parent's id #barchart\r\n                var barchartContainer = d3.select(\"#barchart\");\r\n                barchartContainer.selectAll(\"*\").remove();\r\n\r\n                //create svg on the node DOM with parent's id #barchart\r\n                const barchartSvg = barchartContainer.append(\"svg\")\r\n                        .attr(\"width\", width + margin.left + margin.right)\r\n                        .attr(\"height\", height + margin.top + margin.bottom)\r\n                        .style(\"border\", \"1px solid black\");\r\n\r\n                //create legend\r\n                barchartSvg.append(\"text\").attr(\"x\", margin.left).attr(\"y\", margin.top / 4).text(\"Activité quotidienne\").style(\"font-size\", \"1.5rem\").attr(\"alignment-baseline\", \"central\")\r\n                barchartSvg.append(\"circle\").attr(\"cx\", width - 110).attr(\"cy\", margin.top / 4).attr(\"r\", 6).style(\"fill\", \"#E60000\")\r\n                barchartSvg.append(\"circle\").attr(\"cx\", width - 210).attr(\"cy\", margin.top / 4).attr(\"r\", 6).style(\"fill\", \"#E282D30\")\r\n                barchartSvg.append(\"text\").attr(\"x\", width - 100).attr(\"y\", margin.top / 4).text(\"Calories brûlées (kCal)\").style(\"font-size\", \"1.5rem\").attr(\"alignment-baseline\", \"central\").attr(\"class\", \"bar-chart__text-legend\").style(\"text-anchor\", \"start\")\r\n                barchartSvg.append(\"text\").attr(\"x\", width - 200).attr(\"y\", margin.top / 4).text(\"Poids (kg)\").style(\"font-size\", \"1.5rem\").attr(\"alignment-baseline\", \"central\").attr(\"class\", \"bar-chart__text-legend\").style(\"text-anchor\", \"start\")\r\n\r\n\r\n                const barchart = barchartSvg.append(\"g\")\r\n                        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n                // div for tooltip\r\n                const tooltip = d3.select(\"#barchart\").append(\"div\")\r\n                        .attr(\"class\", \"tooltip\")\r\n                        .style(\"opacity\", 0);\r\n\r\n                //init the container of the bars\r\n                var barGroups = barchart.selectAll(null)\r\n                        .data(data)\r\n                        .enter();\r\n\r\n                // bar representating the kilogram\r\n                barGroups.append(\"rect\")\r\n                        .attr(\"class\", \"bar\")\r\n                        .style(\"fill\", \"#E282D30\")\r\n\r\n                        .attr(\"x\", function (d) { return x(d.day) - 3; }) //position the bar by reference of the center\r\n                        .attr(\"width\", 5)//x.bandwidth()\r\n                        .attr(\"y\", function (d) { return y(d.kilogram); })\r\n                        .attr(\"height\", function (d) { return height - y(d.kilogram); });\r\n\r\n                // bar representating the calories\r\n                barGroups.append(\"rect\")\r\n                        .attr(\"class\", \"bar\")\r\n                        .style(\"fill\", \"#E60000\")\r\n                        .attr(\"x\", function (d) { return x(d.day) + 8; })//position of the bar of calories\r\n                        .attr(\"width\", 5)//x.bandwidth()   width of the bar\r\n                        .attr(\"y\", function (d) { return y1(d.calories) }) //  return y(d.calories);\r\n                        .attr(\"height\", function (d) { return (height) - y1((d.calories)); });\r\n\r\n                //bar representating the kilogram and calories for hover\r\n                barGroups.append(\"rect\")\r\n                        .attr(\"class\", \"barhover\")\r\n                        .attr(\"x\", function (d) { return x(d.day) - 15; }) //position the bar by reference of the center\r\n                        .attr(\"width\", 40)//x.bandwidth() || 5\r\n                        .attr(\"y\", function (d) { return y(d3.max(data, d => d.kilogram)); })\r\n                        .attr(\"height\", function (d) { return height })\r\n                        .on(\"mouseover\", function (event, d) {\r\n                                d3.select(this)\r\n                                        .transition()\r\n                                        .duration(200)\r\n                                        .style(\"opacity\", \"0.5\");\r\n                                tooltip.transition()\r\n                                        .duration(200)\r\n                                        .style(\"opacity\", .9);\r\n                                tooltip.html(function () {\r\n                                        return (`<p>${d.kilogram}kg</p><p>${d.calories}kcal</p>`);\r\n                                })\r\n                                        .style(\"left\", (50 + x(d.day)) + \"px\")     //event.pageX\r\n                                        .style(\"top\", (y(d.kilogram) + margin.top) + \"px\");\r\n                        })\r\n                        .on(\"mouseout\", function (event, d) {\r\n                                d3.select(this)\r\n                                        .style(\"opacity\", 0);\r\n                                tooltip.style(\"opacity\", 0);\r\n\r\n                        });\r\n\r\n                //add the y Axis\r\n                barchart.append(\"g\").call(yAxis);\r\n\r\n                //add the x Axis\r\n                barchart.append(\"g\").call(xAxis);\r\n\r\n        }, [propsData]);\r\n\r\n        return (\r\n                <div className=\"content-barchart\" id=\"barchart\" ></div>\r\n        )\r\n}\r\nexport default BarChart\r\n","import { useEffect, useState } from \"react\"\r\nimport * as d3 from \"d3\";\r\n\r\nconst LineChart = ({ propsDataAverage }) => {\r\n    /* const [linear, setLinear]=useState(70); */\r\n\r\n\r\n    useEffect(() => {\r\n        const dataAverage = propsDataAverage.data.sessions;\r\n        draw(dataAverage);\r\n    }, [propsDataAverage]);\r\n\r\n    const draw = (dataAverage) => {\r\n        //const dataAverage = propsDataAverage.data.sessions;\r\n\r\n        // to know the parent's size\r\n        const parentWidth = document.getElementById(\"linechart\").clientWidth;\r\n        const parentHeight = document.getElementById(\"linechart\").clientHeight;\r\n\r\n        //set the dimensions and margin of the graph\r\n        const margin = { top: 100, right: 30, bottom: 30, left: 30 };\r\n        const width = parentWidth - margin.left - margin.right;\r\n        const height = parentHeight - margin.top - margin.bottom;\r\n\r\n        const dayLetter = [\"Lu\", \"Ma\", \"Me\", \"Je\", \"Ve\", \"Sa\", \"Di\"]\r\n        var linear = 100;\r\n        // set the ranges of y for day of weeks\r\n        const xScale = d3.scaleLinear()\r\n            /*  .domain(dataAverage.map((d) => d.day)) */\r\n            .domain([dataAverage[0].day, dataAverage.length])  // rajouter +1 a la longeur pour afficher le dim\r\n            .range([0, width]); // largeur du graph sur x\r\n\r\n        // set the ranges of y for sessions time\r\n        const yScale = d3.scaleLinear()\r\n            .domain([d3.min(dataAverage, d => d.sessionLength) - 10, d3.max(dataAverage, d => d.sessionLength)]) // scale range of data y\r\n            .range([height, 0]);// hauteur du gaph sur y\r\n\r\n        // define the line\r\n        const line = d3.line()\r\n            .x((d) => xScale(d.day))\r\n            .y((d) => yScale(d.sessionLength))\r\n            .curve(d3.curveCardinal);\r\n\r\n        //cleaning svg on the node DOM with parent's id #barchart\r\n        var linechartContainer = d3.select(\"#linechart\");\r\n        linechartContainer.selectAll(\"*\").remove();\r\n\r\n        //create svg on the node DOM with parent's id #barchart\r\n        const linechartSvg = linechartContainer.append(\"svg\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            .style(\"border\", \"1px solid black\");\r\n\r\n\r\n\r\n\r\n\r\n        //creation du liear gradient\r\n        // Create the svg:defs element and the main gradient definition.\r\n        const svgDefs = linechartSvg.append('defs');\r\n        var mainGradient = svgDefs.append('linearGradient')\r\n            .attr('id', 'mainGradient');\r\n\r\n        // Create the stops of the main gradient. Each stop will be assigned\r\n        // a class to style the stop using CSS.\r\n\r\n        mainGradient.append('stop')\r\n            .attr('class', 'stop-left')\r\n            .attr('offset', '0%');\r\n\r\n        var toto = mainGradient.append('stop')\r\n            .attr('class', 'stop-left')\r\n            .attr('offset', `${linear}%`);\r\n\r\n        mainGradient.append('stop')\r\n            .attr('class', 'stop-right')\r\n            .attr('offset', '0%');\r\n\r\n        mainGradient.append('stop')\r\n            .attr('class', 'stop-right')\r\n            .attr('offset', '100%');\r\n\r\n        linechartSvg.append('rect')\r\n            .classed('filled', true)\r\n            .attr('x', 0)\r\n            .attr('y', 0)\r\n            .attr('width', width + margin.left + margin.right)\r\n            .attr('height', height + margin.top + margin.bottom);\r\n\r\n        //create legend\r\n        linechartSvg.append(\"text\")\r\n            .attr(\"x\", margin.left)\r\n            .attr(\"y\", margin.top / 4)\r\n            .text(\"Durée moyenne des sessions\")\r\n            .style(\"font-size\", \"1.5rem\")\r\n            .attr(\"alignment-baseline\", \"middle\")\r\n            .style(\"fill\", \"white\");\r\n\r\n        // creation du tableau et décalage au centre\r\n        const lineChart = linechartSvg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n        //define the line curve for the first line\r\n        lineChart.append(\"path\")\r\n            .data(dataAverage)\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", \"white\")\r\n            .attr(\"stroke-width\", 2)\r\n            .attr(\"class\", \"line\")\r\n            .attr(\"d\", line(dataAverage));\r\n\r\n        //scale or legend of x Axis\r\n        const xAxisGenerator = g => g\r\n            .attr(\"class\", \"linechart-xAxis\")\r\n            .attr(\"transform\", \"translate(0,\" + height + \")\") //deplacement vers le bas de l'abscisse\r\n            .style(\"font-size\", \"12px\")\r\n            .style(\"color\", 'white')\r\n            .call(d3.axisBottom(xScale).ticks(5).tickSize(0).tickFormat((d, i) => dayLetter[i]))//remove little tick foward legend tickSizeInner or ticksSizeOuter   .tickSize(0) .tickFormat(d3.format(\".0\"))  .tickSize(0).tickFormat(d3.format(\".1\"))\r\n            .call(g => g.select(\".domain\").remove()); // remove the horizontal line forward legend\r\n\r\n        // scale or legend of y axis\r\n        const yAxisGenerator = g => g\r\n            .attr(\"class\", \"linechart-yAxis\")\r\n            .attr(\"transform\", \"translate(\" + width + \",0)\")// only for rigth ordonnée is on left by default\r\n            .style(\"font-size\", \"12px\")\r\n            .style(\"color\", 'white')\r\n            .call(d3.axisLeft().scale(yScale)) // put the legend at right to bar y .tickSizeOuter(-500).tickSizeInner(0)   .tickFormat(d3.format(\".2\")).ticks(2).tickSize(-width)\r\n\r\n        //create  line  on vertical \r\n        const axisLine = linechartSvg\r\n            .append(\"g\")\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"dotted\")\r\n            .attr(\"stroke-width\", \"1px\")\r\n            .attr(\"width\", \".5px\")\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            .style(\"opacity\", \"0\")\r\n\r\n        var focus = lineChart.append('g')\r\n            .append('circle')\r\n            .style(\"fill\", \"white\")\r\n            .attr(\"stroke\", \"black\")\r\n            .attr('r', 4)\r\n            .style(\"opacity\", 0);\r\n\r\n        // div for tooltip\r\n        const focusText = d3.select(\"#linechart\").append(\"div\")\r\n            .attr(\"class\", \"focus-text\")\r\n            .style(\"opacity\", 0);\r\n\r\n        // Create a rect on top of the svg area: this rectangle recovers mouse position\r\n        lineChart\r\n            .append('rect')\r\n            .style(\"fill\", \"none\")\r\n            .style(\"pointer-events\", \"all\")\r\n            .attr('width', width)\r\n            .attr('height', height)\r\n            .on('click', onclick)\r\n            .on('mousemove', mousemove)\r\n    //.on('mouseout', mouseout);\r\n        /* \r\n        function mouseover(e){\r\n            focus.style(\"opacity\", \"1\");\r\n        } */\r\n\r\n        function mousemove(e) {\r\n            var bisectDay = d3.bisector((d) => d.day).left;\r\n            const mousePosition = d3.pointer(e)\r\n            var currentX = xScale.invert(mousePosition[0]);\r\n\r\n            //coordonate of x\r\n            var xCurve = bisectDay(dataAverage, currentX);\r\n            var currentData = dataAverage.filter((d) => d.day === xCurve);\r\n            if (currentX >= 1) {\r\n                var yCurve = currentData[0].sessionLength;\r\n\r\n                focus.style(\"opacity\", \"1\")\r\n                    .attr(\"cx\", xScale(xCurve))\r\n                    .attr(\"cy\", yScale(yCurve));\r\n\r\n                axisLine.attr(\"x\", xScale(currentX) + 30 + \"px\")\r\n                    .style(\"opacity\", \"1\");\r\n\r\n\r\n                focusText.html(function () {\r\n                    return (`<p>${currentData[0].sessionLength}min</p>`);\r\n                }).style(\"opacity\", \"1\")\r\n                    .style(\"left\", xScale(xCurve) + 30 + \"px\")\r\n                    .style(\"top\", yScale(yCurve) + 60 + \"px\")\r\n                    .style(\"border-radius\", \"2px\");\r\n\r\n                var rec = width\r\n                linear = ((xScale(currentX) / rec) * 100);\r\n                toto.attr('offset', `${linear}%`);\r\n                console.log(xScale(currentX) + \" \" + linear)\r\n            }\r\n        }\r\n        function mouseout() {\r\n            focus.style(\"opacity\", 0)\r\n            focusText.style(\"opacity\", 0)\r\n          axisLine.style(\"opacity\", \"0\")\r\n        }\r\n\r\n        //add the y Axis\r\n        //lineChart.append(\"g\").call(yAxisGenerator);\r\n\r\n        //add the x Axis\r\n        lineChart.append(\"g\").call(xAxisGenerator);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"line-chart\" id=\"linechart\">\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineChart","import { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst RadarChart = ({ propsDataPerformance }) => {\r\n    const dataPerformance = propsDataPerformance.data;\r\n    /*   const dataKind =dataPerformance.kind;\r\n      const dataData= dataPerformance.data;\r\n      console.log(\"dataKind\"+ dataKind);\r\n      console.log(\"dataData\"+ dataData); */\r\n\r\n    useEffect(() => {\r\n\r\n        draw(dataPerformance)\r\n    }, [dataPerformance]);\r\n\r\n    function draw(data) {\r\n\r\n        const parentWidth = document.getElementById(\"radarchart\").clientWidth;\r\n        const parentHeight = document.getElementById(\"radarchart\").clientHeight;\r\n\r\n        //set the dimensions and margin of the graph\r\n        const margin = { top: 100, right: 30, bottom: 30, left: 30 };\r\n        const width = parentWidth - margin.left - margin.right;\r\n        const height = parentHeight - margin.top - margin.bottom;\r\n\r\n\r\n        const value = {\r\n            nbSides: 5,  // nb of polygon's sides\r\n            nbLevel: 4,  // nb of level\r\n            offset: Math.PI, // polygon start on top ( same as horloge)\r\n            r: 0.8 * width, // distance entre le bord et la zone du dessin\r\n        }\r\n        const param = {\r\n            polyangle: (Math.PI * 2) / value.nbSides,  // angle au centre du polygon pour chaque coté soit 360° ou 2 *Math.Pi radians. pour un polygon regulier nous divisons par le nb de face\r\n            r_0: value.r / 2, // distance maximale admissible du centre au bord du polygon pour reserver une space avec le dessin\r\n            centerX: width / 2,\r\n            centerY: width / 2 // coordonnées svg placées au center plutot que en haut à gauche\r\n        }\r\n\r\n        const wrapperSvg = d3.select(\"#radarchart\")\r\n            .append(\"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"heigth\", width);\r\n\r\n        const g = wrapperSvg.append(\"g\");\r\n\r\n        // pour dessiner le polygon nous recuperons les coordonées des sommets du polygone\r\n        const generatePoint = ({ length, angle }) => {\r\n            const point = {\r\n                x: param.centerX + (length * Math.sin(value.offset - angle)),\r\n                y: param.centerY + (length * Math.cos(value.offset - angle))\r\n            };\r\n            return point;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"radar-chart\" id=\"radarchart\">componenent radar\r\n            <div>\r\n                {dataPerformance.data.map((v) => (\r\n                    <div>\r\n                        <p> `kind  {v.kind}`</p>\r\n                        <p>`value {v.value}`</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadarChart\r\n\r\n/* // add touch to mouseover and mouseout\r\nvar over = \"ontouchstart\" in window ? \"touchstart\" : \"mouseover\";\r\nvar out = \"ontouchstart\" in window ? \"touchend\" : \"mouseout\"; */","export const USER_MAIN_DATA = [\r\n    {\r\n        id: 12,\r\n        userInfos: {\r\n            firstName: 'Karl',\r\n            lastName: 'Dovineau',\r\n            age: 31,\r\n        },\r\n        todayScore: 0.12,\r\n        keyData: {\r\n            calorieCount: 1930,\r\n            proteinCount: 155,\r\n            carbohydrateCount: 290,\r\n            lipidCount: 50\r\n        }\r\n    },\r\n    {\r\n        id: 18,\r\n        userInfos: {\r\n            firstName: 'Cecilia',\r\n            lastName: 'Ratorez',\r\n            age: 34,\r\n        },\r\n        score: 0.3,\r\n        keyData: {\r\n            calorieCount: 2500,\r\n            proteinCount: 90,\r\n            carbohydrateCount: 150,\r\n            lipidCount: 120\r\n        }\r\n    }\r\n]\r\n\r\nexport const USER_ACTIVITY = [\r\n    {\r\n        userId: 12,\r\n        sessions: [\r\n            {\r\n                day: '2020-07-01',\r\n                kilogram: 80,\r\n                calories: 240\r\n            },\r\n            {\r\n                day: '2020-07-02',\r\n                kilogram: 80,\r\n                calories: 220\r\n            },\r\n            {\r\n                day: '2020-07-03',\r\n                kilogram: 81,\r\n                calories: 280\r\n            },\r\n            {\r\n                day: '2020-07-04',\r\n                kilogram: 81,\r\n                calories: 290\r\n            },\r\n            {\r\n                day: '2020-07-05',\r\n                kilogram: 80,\r\n                calories: 160\r\n            },\r\n            {\r\n                day: '2020-07-06',\r\n                kilogram: 78,\r\n                calories: 162\r\n            },\r\n            {\r\n                day: '2020-07-07',\r\n                kilogram: 76,\r\n                calories: 390\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId: 18,\r\n        sessions: [\r\n            {\r\n                day: '2020-07-01',\r\n                kilogram: 70,\r\n                calories: 240\r\n            },\r\n            {\r\n                day: '2020-07-02',\r\n                kilogram: 69,\r\n                calories: 220\r\n            },\r\n            {\r\n                day: '2020-07-03',\r\n                kilogram: 70,\r\n                calories: 280\r\n            },\r\n            {\r\n                day: '2020-07-04',\r\n                kilogram: 70,\r\n                calories: 500\r\n            },\r\n            {\r\n                day: '2020-07-05',\r\n                kilogram: 69,\r\n                calories: 160\r\n            },\r\n            {\r\n                day: '2020-07-06',\r\n                kilogram: 69,\r\n                calories: 162\r\n            },\r\n            {\r\n                day: '2020-07-07',\r\n                kilogram: 69,\r\n                calories: 390\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n\r\nexport const USER_AVERAGE_SESSIONS = [\r\n    {\r\n        userId: 12,\r\n        sessions: [\r\n            {\r\n                day: 1,\r\n                sessionLength: 30\r\n            },\r\n            {\r\n                day: 2,\r\n                sessionLength: 23\r\n            },\r\n            {\r\n                day: 3,\r\n                sessionLength: 45\r\n            },\r\n            {\r\n                day: 4,\r\n                sessionLength: 50\r\n            },\r\n            {\r\n                day: 5,\r\n                sessionLength: 0\r\n            },\r\n            {\r\n                day: 6,\r\n                sessionLength: 0\r\n            },\r\n            {\r\n                day: 7,\r\n                sessionLength: 60\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId: 18,\r\n        sessions: [\r\n            {\r\n                day: 1,\r\n                sessionLength: 30\r\n            },\r\n            {\r\n                day: 2,\r\n                sessionLength: 40\r\n            },\r\n            {\r\n                day: 3,\r\n                sessionLength: 50\r\n            },\r\n            {\r\n                day: 4,\r\n                sessionLength: 30\r\n            },\r\n            {\r\n                day: 5,\r\n                sessionLength: 30\r\n            },\r\n            {\r\n                day: 6,\r\n                sessionLength: 50\r\n            },\r\n            {\r\n                day: 7,\r\n                sessionLength: 50\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n\r\nexport const USER_PERFORMANCE = [\r\n    {\r\n        userId: 12,\r\n        kind: {\r\n            1: 'cardio',\r\n            2: 'energy',\r\n            3: 'endurance',\r\n            4: 'strength',\r\n            5: 'speed',\r\n            6: 'intensity'\r\n        },\r\n        data: [\r\n            {\r\n                value: 80,\r\n                kind: 1\r\n            },\r\n            {\r\n                value: 120,\r\n                kind: 2\r\n            },\r\n            {\r\n                value: 140,\r\n                kind: 3\r\n            },\r\n            {\r\n                value: 50,\r\n                kind: 4\r\n            },\r\n            {\r\n                value: 200,\r\n                kind: 5\r\n            },\r\n            {\r\n                value: 90,\r\n                kind: 6\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId: 18,\r\n        kind: {\r\n            1: 'cardio',\r\n            2: 'energy',\r\n            3: 'endurance',\r\n            4: 'strength',\r\n            5: 'speed',\r\n            6: 'intensity'\r\n        },\r\n        data: [\r\n            {\r\n                value: 200,\r\n                kind: 1\r\n            },\r\n            {\r\n                value: 240,\r\n                kind: 2\r\n            },\r\n            {\r\n                value: 80,\r\n                kind: 3\r\n            },\r\n            {\r\n                value: 80,\r\n                kind: 4\r\n            },\r\n            {\r\n                value: 220,\r\n                kind: 5\r\n            },\r\n            {\r\n                value: 110,\r\n                kind: 6\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport { getInfosUser, getUserActivity, getUserAverage } from '../../api/services';\r\nimport Sidebar from '../../components/SideBar';\r\nimport BarChart from '../../components/BarChart';\r\nimport LineChart from '../../components/Linechart';\r\nimport RadarChart from '../../components/Radarchart';\r\nimport { getUserPerformanceMocked, getInfosUserMocked, getUserActivityMocked, getUserAverageMocked } from '../../api/mocks/services';\r\n\r\nfunction Dashboard() {\r\n\r\n    const [userInformation, setUserInformation] = useState(null);\r\n    const [userActivity, setUserActivity] = useState([]);\r\n    const [userPerformance, setUserPerformance] = useState([]);\r\n    const [isError, setIsError] = useState(false);\r\n    const [isDataLoading, setDataLoading] = useState(false);\r\n    const { id } = useParams();\r\n    const [userAverage, setUserAverage] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const develop = true;\r\n\r\n        if (develop) {  // for working with local file \r\n            setUserInformation(getInfosUserMocked(id));\r\n            setUserActivity(getUserActivityMocked(id));\r\n            setUserAverage(getUserAverageMocked(id));\r\n            setUserPerformance(getUserPerformanceMocked(id));\r\n            setDataLoading(true);\r\n            \r\n        } else {     //for working with api on serveur\r\n            Promise.all([\r\n                getInfosUser(id).then((dataInfo) => {\r\n                    setUserInformation(dataInfo);\r\n                }),\r\n                getUserActivity(id).then((dataActivity) => {\r\n                    setUserActivity(dataActivity); //.then(({ results }) => this.setState({ customer: results }))\r\n                }),\r\n                getUserAverage(id).then((dataAverage) => {\r\n                    setUserAverage(dataAverage);\r\n                })\r\n               // getuser\r\n            ]).then((resp) => {\r\n                setDataLoading(true)\r\n\r\n            }).catch((err) => {\r\n                setIsError(true)\r\n                console.log(\"Serveur en maintenance, Merci de ressayer ulterieurement :\"+err)\r\n            })\r\n\r\n        }\r\n    }, [id]);\r\n\r\n    /* console.log(\"userInformation\"+userInformation.data);\r\n      console.log(\"userActivity\"+userActivity.data.userId); */\r\n\r\n    return (\r\n        <div className=\"container-profil\">\r\n            <div className=\"container-profil__sidebar\">\r\n                <Sidebar />\r\n            </div>\r\n            {isDataLoading &&(\r\n                <section className=\"container-profil__dashboard\">\r\n                    <div className=\"profil__dashboard-header\">\r\n                        <h1 className=\"profil__dashboard-title sr-only\">résumé des performances</h1>\r\n                        <h2 className=\"profil__dashboard-user\" key={`${userInformation.data.id}`}>{`Bonjour ${userInformation.data.userInfos.firstName}`}</h2>\r\n                        <p className=\"profil__dashboard-resume\">Félicitation ! vous avez explosé vos objectifs hier</p>\r\n                    </div>\r\n                    <div className=\"profil__dashboard-activities\">\r\n                        <div className=\"profil__activities-center\">\r\n                            <div className=\"profil__activity-today\">\r\n                                <BarChart propsData={userActivity} />\r\n                            </div>\r\n\r\n                            <div className=\"profil__activity-coverage\">\r\n                                <LineChart propsDataAverage={userAverage} />\r\n                            </div>\r\n\r\n                            <div className=\"profil__activity-radar\">\r\n                                <RadarChart propsDataPerformance={userPerformance} />\r\n                            </div>\r\n                            \r\n                            <div className=\"profil__activity-score\"></div>\r\n                        </div>\r\n                        <div className=\"profil__activity-side\">\r\n                            <p> Calories</p>\r\n                            <p>Proteines</p>\r\n                            <p>Glucides</p>\r\n                            <p>Lipides</p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n             ) }\r\n             {isError &&(\r\n                    <h1 className=\"error\">Une erreure est survenue, merci de reessayer</h1>\r\n            )} \r\n           \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard\r\n\r\n/* useEffect(() => {\r\n    let mounted =true;\r\n    getInfosUser(id).then((data) => {\r\n        setUserInformation(data);\r\n    })\r\n    getUserActivity(id)\r\n    .then((data) => {\r\n        if(mounted){\r\n         setUserActivity(data);\r\n         setDataLoading(true)\r\n        }\r\n        }); */\r\n\r\n/*  .catch((error) => {\r\n     console.log(\"une erreur de chargement\" + error);\r\n     setDataLoading(false);\r\n }); */\r\n\r\n/* return () =>{mounted = true;}\r\n}, [id]); */","import { USER_ACTIVITY, USER_MAIN_DATA, USER_AVERAGE_SESSIONS, USER_PERFORMANCE} from '../data/data.js'\r\n\r\nexport const getInfosUserMocked = (id) => {\r\n\r\n     let response =USER_MAIN_DATA\r\n    .filter(user => user.id === Number(id))\r\n    .shift();\r\n    return {data: response}\r\n}\r\n\r\nexport const getUserActivityMocked = (id) =>{\r\n    let response = USER_ACTIVITY\r\n    .filter(user=>user.userId === Number(id)).shift();\r\n    return {data: response}\r\n}\r\n\r\nexport const getUserAverageMocked =(id)=>{\r\n    let response = USER_AVERAGE_SESSIONS\r\n    .filter(user=>user.userId === Number(id)).shift();\r\n    return {data: response}\r\n}\r\n\r\nexport const getUserPerformanceMocked =(id) =>{\r\n    let response = USER_PERFORMANCE\r\n    .filter(user=>user.userId === Number(id)).shift();\r\n    return {data: response}\r\n}","\r\nimport Profil from '../pages/Profil'\r\n\r\nconst router = () => {\r\n\r\n return  [\r\n    {\r\n      path: \"/profil/:id\",\r\n      component: Profil     \r\n    }\r\n  ]\r\n\r\n}\r\nexport default router\r\n\r\n","import { NavLink } from \"react-router-dom\"\r\n const Navbar = () =>{\r\n    return(\r\n        \r\n             <nav className=\"navbar\">\r\n                <ul className=\"navbar__ul\">\r\n                    <li><NavLink className=\"navbar__link\" to=\"/Accueil\">Accueil</NavLink></li>\r\n                    <li><NavLink className=\"navbar__link\" to=\"/Profil\">Profil</NavLink></li>\r\n                    <li><NavLink className=\"navbar__link\" to=\"/Reglage\">Réglage</NavLink></li>\r\n                    <li><NavLink className=\"navbar__link\" to=\"/Communaute\">Communauté</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        \r\n    )\r\n}\r\nexport default Navbar","import Navbar from './NavBar';\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <header className=\"container-header\">\r\n            <div className=\"content-header\">\r\n                <div className=\"content-logo\">\r\n                    <img className=\"logo\" src={process.env.PUBLIC_URL + \"/logo.png\"} alt=\"logo\" />\r\n                </div>\r\n                <div className=\"content-navbar\">\r\n                    <Navbar />\r\n                </div>\r\n            </div>\r\n            \r\n\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom' // BrowserRouter as Router\r\nimport NotFound from '../NotFound';\r\nimport route from '../../route/route-user';\r\nimport Header from '../../components/Header'\r\n\r\nconst App = () => {\r\n\r\n    const userId = 18;\r\n    return (\r\n        <Router>\r\n            <Header />\r\n            <Switch>\r\n                <Redirect exact from=\"/\" to={`/profil/${userId}`} />\r\n                {\r\n                    route().map((route, i) => <Route key={i} path={route.path} component={route.component} />)\r\n                }\r\n                <Route path=\"*\" component={NotFound} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './sass/main.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n/* import { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport NotFound from './pages/NotFound';\r\nimport route  from './route/route-user'\r\nimport Accueil from './pages/Accueil';\r\nimport Profil from './pages/Profil';\r\nimport Communaute from './pages/Communaute';\r\nimport Reglage from './pages/Reglage'; */\r\nimport App from './pages/App';\r\n\r\nReactDOM.render(\r\n  \r\n  <React.StrictMode>\r\n  <App />\r\n    {/* <Router>\r\n      <App />\r\n      <Switch>\r\n        <Redirect exact from=\"/\" to=\"/Profil\" />\r\n        <Route path=\"/Profil\"  >\r\n          <Profil />\r\n        </Route>\r\n        <Route path=\"/Accueil\" >\r\n          <Accueil />\r\n        </Route>\r\n        <Route path=\"/Communaute\" >\r\n          <Communaute />\r\n        </Route>\r\n        <Route path=\"/Reglage\" >\r\n          <Reglage />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n    </Router> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}